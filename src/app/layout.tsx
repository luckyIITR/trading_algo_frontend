'use client';
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { NotificationProvider } from "./components/NotificationProvider";
import ReactQueryProvider from './components/ReactQueryProvider';
import { useState, useEffect } from 'react';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Dark mode state (client only)
  const [dark, setDark] = useState(false);
  useEffect(() => {
    if (dark) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  }, [dark]);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-gradient-to-br from-gray-100 to-blue-50 dark:from-gray-900 dark:to-gray-950 transition-colors`}
      >
        <ReactQueryProvider>
          <NotificationProvider>
            <div className="min-h-screen flex">
              {/* Sidebar */}
              <aside className="hidden md:flex flex-col w-56 bg-white/90 dark:bg-gray-900 border-r border-gray-200 dark:border-gray-800 shadow-lg py-6 px-4 gap-8">
                <div className="flex items-center gap-2 mb-8">
                  <span className="text-2xl font-bold tracking-tight text-blue-700 dark:text-blue-300">Trading Algo</span>
                </div>
                <nav className="flex flex-col gap-2 text-sm">
                  <a href="/" className="px-3 py-2 rounded text-gray-700 dark:text-gray-200 hover:bg-blue-50 dark:hover:bg-gray-800 font-semibold transition">Dashboard</a>
                  <a href="/logs" className="px-3 py-2 rounded text-gray-700 dark:text-gray-200 hover:bg-blue-50 dark:hover:bg-gray-800 font-semibold transition">Logs</a>
                  <a href="/settings" className="px-3 py-2 rounded text-gray-700 dark:text-gray-200 hover:bg-blue-50 dark:hover:bg-gray-800 font-semibold transition">Settings</a>
                </nav>
                <div className="mt-auto flex items-center gap-2">
                  <button
                    onClick={() => setDark(d => !d)}
                    className="px-3 py-1 rounded bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700 transition text-xs font-semibold"
                  >
                    {dark ? '‚òÄÔ∏è Light' : 'üåô Dark'}
                  </button>
                </div>
              </aside>
              {/* Main content */}
              <div className="flex-1 min-h-screen flex flex-col">
                {/* Topbar for mobile */}
                <header className="md:hidden sticky top-0 z-30 bg-white/80 dark:bg-gray-900/90 backdrop-blur border-b border-gray-200 dark:border-gray-800 shadow-sm flex items-center justify-between px-4 py-3">
                  <span className="text-xl font-bold tracking-tight text-blue-700 dark:text-blue-300">Trading Algo</span>
                  <button
                    onClick={() => setDark(d => !d)}
                    className="px-3 py-1 rounded bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700 transition text-xs font-semibold"
                  >
                    {dark ? '‚òÄÔ∏è Light' : 'üåô Dark'}
                  </button>
                </header>
                <main className="max-w-5xl mx-auto px-4 py-8 flex flex-col gap-8 w-full">
                  {children}
                </main>
              </div>
            </div>
          </NotificationProvider>
        </ReactQueryProvider>
      </body>
    </html>
  );
}
